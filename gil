#!/bin/bash
#git log --graph -n 20 --full-history --all --date=iso --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s $blue(%an - %ad%x08%x08%x08%x08%x08%x08%x08%x08%x08)%Creset"
#http://stackoverflow.com/questions/1057564/pretty-git-branch-graphs
. lib-git
if [[ "$1" == "" ]];then
	commits_num=10
  else
  	commits_num=$1
  fi

	#git log --graph -n 20 --full-history --all --date=iso --color --pretty=format:"$red%h$green%d %x09% %s $blue(%an - %ad%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08)%Creset"
git log --graph -n $commits_num --full-history --all --date=iso --color --author-date-order \
	--pretty=format:"$git_green$COMMIT $git_yellow$HASH $git_norm$git_white$TIME2 $BRANCH $git_grey $AUTHOR $git_white $git_green $REFNAME" #$git_blue $git_green

#        while IFS=+ read -r hash time branch message; do                                            \
#            timelength=$(echo \"$time\" | sed -r \"s:[^ ][[]([0-9]{1,2}(;[0-9]{1,2})?)?m::g\");     \
#            timelength=$(echo \"16+${#time}-${#timelength}\" | bc);                                 \
#            printf \"%${timelength}s    %s %s %s\n\" \"$time\" \"$hash\" \"$branch\" \"$message\";  \
#        done < <( git log --all --graph --decorate=short --color --format=format:'%C(bold blue)%h%C(reset)+%C(dim black)(%cr)%C(reset)+%C(auto)%d%C(reset)++\n+++       %C(bold black)%an%C(reset)%C(black): %s%C(reset)' && echo)
# bc
	# --branches=master --remotes=bb
	#git log --graph -n $commits_num --full-history --all --date=format:'%m-%d' --color --pretty=format:"$grey$HASH $tab$norm$yellow%ad $white$COMMIT $green$BRANCH $blue$AUTHOR $white" # %Y-  %H:%M:%S

#git log -n 20 --oneline --abbrev-commit --all --graph --pretty=format:"%C(yellow)%h%x09%Creset%x09%x09%s (%an)" $*
#git log -last --pretty=format:"%C(yellow)%h%x09%Creset%an%x09%x09%s" --decorate -20 --graph $*
