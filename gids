#!/bin/bash
# shows menu to choose file which diff you want to view

mode="$1" # "": work/head  last:head/head~1
# TODO: if total files > 9 -> wait second key
# TODO: add nexp/prev commit (correct gids and pass "hash~<n> hash~<-n>")
# TODO: to view deleted file - cirrect gdis)

#put untracked fnames to arr
if [ "$mode " == "" ]; then
	arr=($(git ls-files --others --exclude-standard)) 
  fi
	#array=($(gis | grep -v '??' | cut -c 4-)) 
	#array=($({(git diff --stat=200 --color | sed -n '$! p'); for i in "${arr[@]}"; do echo -e " ${yellow}$i${norm}"; done;	} | awk '{print NR "\t" $0}' )) 

#put tracked fnames to array:
[ "$mode" == "" ] && array=($({(git status -s --untracked-files --porcelain | grep -v '??' | cut -c 4-); for i in "${arr[@]}"; do echo "$i"; done;	})) 
[ "$mode" == "last" ] && array=($(git diff head head~1 --name-only | sed -E "s/^(.*)$/\"\1\"/g" )) #   while read x; do echo '"'"$x"'"'; done
[ "$mode" == "prev" ] && array=($(git diff head~1 head~2 --name-only | sed -E "s/^(.*)$/\"\1\"/g" ))

(( tot = ${#array[@]} )) 
#echo tot: $tot #+ ${#arr[@]}
[[ $tot -eq 0 ]] && echo "No files found" && exit 
#echo "${array[0]}"
#for i in "${array[@]}"; do echo "$i"; done; exit # echo "${array[@]}"
clear
bound=${#array[@]} 
(( bound = bound - 1 )) #; echo bound: $bound

# show header with enumed file list:
[ "$mode" == "" ] && {(git diff --stat=200 --color | sed -n '$! p'); for i in "${arr[@]}"; do echo -e " ${yellow}UNTRACKED: $i${norm}"; done;	} | awk '{print NR "\t" $0}' 
[ "$mode" == "last" ] && (git diff head head~1 --stat --color) | sed -n '$! p' | awk '{print NR "\t" $0}' 
[ "$mode" == "prev" ] && (git diff head~1 head~2 --stat --color) | sed -n '$! p' | awk '{print NR "\t" $0}' 

# show menu
current=0 # current index for view diff
init_prompt="${yellow}Press key with your choice${norm} - (${green}0..9${norm}-file_number  ${green}N${norm}-next  ${green}P${norm}:revious  ${green}<CR>${norm}-current  ${green}Q${norm}-quit: " 
looped_prompt="\n$init_prompt"
#prompt_out=" ${yellow}Viewed #$(( current + 1 )) - '${array[$current]}'${norm} $looped_prompt"
fail_prompt=" ${red}$n is out of bounds (1..$(( bound + 1 )) ) !${norm} $looped_prompt"
(( num = current + 1 )) # echo num: $num
#gid "${array[$current]}"
echo -n -e "$init_prompt"
read -rsn1 n
echo -n -e "$n"
while true;	do
	#clear
	is_invalid=1 # unknown key pressed
	if [ "$n" == "Q" -o "$n" == "q" ]; then 
		echo "" #<CR>
		break
	  fi
	if [ "$n" == "C"  -o  "$n" == "c"  -o  "$n" == "" ]; then
		[ "$n" == "" ] && echo -n "<CR>"
		is_invalid=0
	  fi
	if [ "$n" == "N" -o "$n" == "n" ]; then
		if [ $current -lt $bound ]; then 
			(( current = current + 1 )) 
			is_invalid=0
		  else
		  	is_invalid=2 # out of bounds
		  fi
	  fi
	if [ "$n" == "P" -o "$n" == "p" ]; then
		if [ $current -gt 0 ]; then
			(( current = current - 1 ))
			is_invalid=0
		  else
		  	is_invalid=2 # out of bounds
		  fi
	  fi
	if [[ $n =~ ^[0-9]$ ]]; then #if [ "$var" -eq "$var" ] 2>/dev/null; then
		(( new_idx = n - 1 ))

		if [[ $new_idx -le $bound  &&  $new_idx -ge 0 ]]; then 
			(( current = new_idx )) 
			is_invalid=0
		  else
		  	is_invalid=2 # out of bounds
		  fi
	  fi
	if [ $is_invalid -eq 2 ]; then
	  	echo -n -e "$fail_prompt"
		read -rsn1 n
		echo -n -e "$n"
		continue
	  fi
	if [ ! $is_invalid -eq 0 ]; then
		echo -n -e " ${red}'$n' is not valid choice !${norm} $looped_prompt"
		read -rsn1 n
		echo -n -e "$n"
		continue
	  fi
	echo "${array[$current]}"
	if [ -f "${array[$current]}" ]; then
		#echo gdis "${array[$current]}" "$mode"
		gdis "${array[$current]}" "$mode"
		echo -n -e "${yellow} Viewed $(( current + 1 )) - '${array[$current]}'${norm} $looped_prompt" # "$prompt_out"  #$(( current + 1 ))
	  else
	  	echo -e " ${yellow}File (#$(( current + 1 ))) not found (deleted?) - '${array[$current]}'${norm}"
		echo -n -e "$init_prompt"
	  fi
	read -rsn1 n
	echo -n -e "$n"
  done
